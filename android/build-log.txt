Initialized native services in: C:\Users\ASADBEK\.gradle\native
Initialized jansi services in: C:\Users\ASADBEK\.gradle\native
Found daemon DaemonInfo{pid=7464, address=[c59919c3-3a64-4fae-b7fd-b62fd87e14f0 port:52378, addresses:[/127.0.0.1]], state=Idle, lastBusy=1760900206599, context=DefaultDaemonContext[uid=5206279b-4125-4841-a941-f75833741672,javaHome=C:\Program Files\Eclipse Adoptium\jdk-17.0.16.8-hotspot,javaVersion=17,javaVendor=Eclipse Adoptium,daemonRegistryDir=C:\Users\ASADBEK\.gradle\daemon,pid=7464,idleTimeout=10800000,priority=NORMAL,applyInstrumentationAgent=true,nativeServicesMode=ENABLED,daemonOpts=-XX:MaxMetaspaceSize=512m,-Xmx2048m,-Dfile.encoding=UTF-8,-Duser.country=US,-Duser.language=en,-Duser.variant]} however its context does not match the desired criteria.
JVM is incompatible.
Wanted: DaemonRequestContext{jvmCriteria=C:\Program Files\Eclipse Adoptium\jdk-11.0.28.6-hotspot (no JDK specified, using current Java home), daemonOpts=[-XX:MaxMetaspaceSize=512m, -Xmx2048m, -Dfile.encoding=windows-1252, -Duser.country=US, -Duser.language=en, -Duser.variant], applyInstrumentationAgent=true, nativeServicesMode=ENABLED, priority=NORMAL}
Actual: DefaultDaemonContext[uid=5206279b-4125-4841-a941-f75833741672,javaHome=C:\Program Files\Eclipse Adoptium\jdk-17.0.16.8-hotspot,javaVersion=17,javaVendor=Eclipse Adoptium,daemonRegistryDir=C:\Users\ASADBEK\.gradle\daemon,pid=7464,idleTimeout=10800000,priority=NORMAL,applyInstrumentationAgent=true,nativeServicesMode=ENABLED,daemonOpts=-XX:MaxMetaspaceSize=512m,-Xmx2048m,-Dfile.encoding=UTF-8,-Duser.country=US,-Duser.language=en,-Duser.variant]

  Looking for a different daemon...
The client will now receive all logging from the daemon (pid: 11108). The daemon log file: C:\Users\ASADBEK\.gradle\daemon\8.14.3\daemon-11108.out.log
Starting 3rd build in daemon [uptime: 6 mins 33.279 secs, performance: 99%, GC rate: 0.00/s, heap usage: 0% of 2 GiB, non-heap usage: 9% of 512 MiB]
Using 12 worker leases.
Now considering [D:\cambridge_app\android] as hierarchies to watch
Watching the file system is configured to be enabled if available
File system watching is active
Starting Build
Starting process 'command 'node''. Working directory: D:\cambridge_app\android Command: node --print require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })
Successfully started process 'command 'node''
Starting process 'command 'node''. Working directory: D:\cambridge_app\android Command: node --print require.resolve('expo-modules-autolinking/package.json', { paths: [require.resolve('expo/package.json')] })
Successfully started process 'command 'node''
Now considering [D:\cambridge_app\node_modules\@react-native\gradle-plugin, D:\cambridge_app\android] as hierarchies to watch

[Incubating] Problems report is available at: file:///D:/cambridge_app/android/build/reports/problems/problems-report.html
Watched directory hierarchies: []
